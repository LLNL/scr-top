name: build-and-test

# Inspired by mfem
# https://github.com/mfem/mfem/blob/master/.github/workflows/builds-and-tests.yml

permissions:
  actions: write

on:
  push:
    branches:
      - main
  pull_request:


jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-10.15]
        target: [Debug, Release]
        # CMAKE_BUILD_TYPE values go here
        #
        mpi: [par]
        # additional option: seq
        #
        #
        # 'include' allows us to:
        # - Add a variable to all jobs without creating a new matrix dimension.
        #   Codecov is defined that way.
        include:
          - target: Debug
            codecov: NO
          - target: Release
            codecov: YES
          - os: ubuntu-latest
            target: Release
            codecov: NO
            mpi: par
          - os: ubuntu-latest
            target: Release
            codecov: NO
            mpi: par
    name: ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.mpi }}

    runs-on: ${{ matrix.os }}

    steps:

    - name: checkout scr-top
      uses: actions/checkout@v2
      with:
        path: scr-top
        fetch-depth: 0

    # Only get MPI if defined for the job.
    # TODO: It would be nice to have only one step, e.g. with a dedicated
    # action, but I (@adrienbernede) don't see how at the moment.
    - name: get MPI (Linux)
      if: matrix.mpi == 'par' && matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install mpich libmpich-dev

    - name: get lcov (Linux)
      if: matrix.codecov == 'YES' && matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install lcov

    - name: get pdsh (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install pdsh

    - name: Set up Homebrew
      if: ( matrix.mpi == 'par' || matrix.codecov == 'YES' ) && matrix.os == 'macos-10.15'
      uses: Homebrew/actions/setup-homebrew@c4aafe8c4620bf08883dd4679c374f11e73329d3

    - name: get MPI (MacOS)
      if: matrix.mpi == 'par' && matrix.os == 'macos-10.15'
      run: |
        export HOMEBREW_NO_INSTALL_CLEANUP=1
        brew install openmpi

    - name: get MPI (MacOS)
      if: matrix.codecov == 'YES' && matrix.os == 'macos-10.15'
      run: |
        export HOMEBREW_NO_INSTALL_CLEANUP=1
        brew install lcov

    - name: get pdsh (MacOS)
      if: matrix.os == 'macos-10.15'
      run: |
        export HOMEBREW_NO_INSTALL_CLEANUP=1
        brew install pdsh

    - name: build all
      run: |
        cd scr-top
        make clone
        make build
        cd build
        cmake ../ -DCMAKE_BUILD_TYPE=${{ matrix.target }}
        make

    - name: test kvtree
      run: |
        cd scr-top/build/kvtree-prefix/src/kvtree-build/
        make test

    - name: test rankstr
      run: |
        cd scr-top/build/rankstr-prefix/src/rankstr-build/
        make test

    - name: test redset
      run: |
        cd scr-top/build/redset-prefix/src/redset-build/
        make test

    - name: test shuffile
      run: |
        cd scr-top/build/shuffile-prefix/src/shuffile-build/
        make test

    - name: test er
      run: |
        cd scr-top/build/er-prefix/src/er-build/
        make test

    - name: test axl
      run: |
        cd scr-top/build/axl-prefix/src/axl-build/
        make test

    - name: test spath
      run: |
        cd scr-top/build/spath-prefix/src/spath-build/
        make test

    - name: test scr
      run: |
        cd scr-top/build/scr-prefix/src/scr-build/
        make test
